return(string)
}
}
extrai.branco("ab cd ","left")
extrai.branco(" ab c ","right")
extrai.branco(" ab c ","both")
extrai.branco <- function(string,onde){
if(onde=="left"){
return(str_remove(string,"^[[:space:]]+"))
}
if(onde=="right"){
return(str_remove(string,"[[:space:]]+$"))
}
if(onde=="both"){
string %>% str_remove("^[[:space:]]+") %>%
str_remove("[[:space:]]+$") %>%
reurn()
}
}
extrai.branco(" ab c ","both")
extrai.branco <- function(string,onde){
if(onde=="left"){
return(str_remove(string,"^[[:space:]]+"))
}
if(onde=="right"){
return(str_remove(string,"[[:space:]]+$"))
}
if(onde=="both"){
string %>% str_remove("^[[:space:]]+") %>%
str_remove("[[:space:]]+$") %>%
return()
}
}
extrai.branco(" ab c ","both")
str_pad("hadley", 1, "both")
str_pad("hadley", 2, "both")
str_pad("hadley", 30, "both")
str_length(str_pad("hadley", 30, "both"))
str_pad("hadley", 4, "both")
str_pad("hadley", 6, "both")
str_pad("hadley", 7, "both")
str_pad("hadley", 8, "both")
inclui.branco <- function(string,tamanho, onde){
string %>% str_pad(tamanho,onde) %>% return()
}
inclui.branco("hadley",30,"both")
inclui.branco("hadley",30,"left")
str_c(c("A", "b",
"C"))
str_c("A", "b","C")
?str_c
str_c("A", "b","C", sep = ",")
str_c("A", "b","C", sep = c(",","."))
str_c("A", "b","C", sep = ".")
str_c("A", "b","C", sep = c(",",".","."))
str_c("A", "b","C", sep = c(".",".","."))
c("A", "b",
"C"
)
c("A", "b","C")
str_c( "A" "b" "C")
str_c( "A" "b" "C",sep = ",")
string1 ="A" "b" "C"
string1 = c("A", "b","C")
str_length(string1)
string1[1]
n_char(c("A", "b","C")
1
lenght(string1)
length(string1)
frase <- c("Antes eu não sabia R. Agora estou cursando ME115 e adorando!")
str_view_all(frase,
"an")
install.packages("htmlwidgets")
frase <- c("Antes eu não sabia R. Agora estou cursando ME115 e adorando!")
str_view_all(frase,
"an")
str_view("abcd.",[.])
str_view("abcd.",[.])
str_view("abcd.","[.]")
//.
"//."
"\\."
str_view("abcd.\"","\"[.]")
str_view("abcd\".","\"[.]")
str_view(".a.b.c",[.][a-zA-Z][.][a-zA-Z][.][a-zA-Z])
str_view(".a.b.c","[.][a-zA-Z][.][a-zA-Z][.][a-zA-Z]")
str_view("abc.a.b.cabc","[.][a-zA-Z][.][a-zA-Z][.][a-zA-Z]")
str_view(c(".a.b.c", ".a.b", "....."),"[.][a-zA-Z][.][a-zA-Z][.][a-zA-Z]")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"[$]")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"[$]\^[$]")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"[$][^][$]")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"[$][\^][$]")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"[$]\^[$]")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"[$]^[$]")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"[$] ^ [$]")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"\ˆ")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"\ˆ")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"\a")
str_view(c("$ˆ$", "ab$ˆ$sfas"),"ˆ")
str_view(c("$^$", "ab$ˆ$sfas"),"\^")
str_view(c("$^$", "ab$ˆ$sfas"),"[$]\^[$]")
str_view(c("$^$", "ab$ˆ$sfas"),"[$]\^[$]")
str_view(c("$^$", "ab$ˆ$sfas"),"[$]")
str_view(c("$.^$", "ab$ˆ$sfas"),"[$]\.")
str_view(c("$.^$", "ab$ˆ$sfas"),"[$]\\.")
str_view(c("$^$", "ab$ˆ$sfas"),"[$]\\^")
str_view(c("$^$", "ab$ˆ$sfas"),"[$]\\^[$]")
str_view(c("$^$", "ab$^$sfas"),"[$]\\^[$]")
stringr::words
str_subset(stringr::words,pattern = "^y")
str_subset(stringr::words,pattern = "")
str_subset(stringr::words,pattern = "x$")
str_subset(stringr::words,pattern = "[a-z]{3}")
str_view(stringr::words, "^y")
str_view(stringr::words, "x$")
str_view(stringr::words, "^y")
str_view(stringr::words, "x$")
str_view(stringr::words, "[a-z]{3}")
str_view(stringr::words,match = "^y")
str_view(stringr::words, "^y", match = T)
str_view(stringr::words, "x$", match = T)
str_view(stringr::words, "^y", match = T)
str_view(stringr::words, "[a-z]{3}", match = T)
str_view(stringr::words, "^[a-z]{3}$", match = T)
str_view(stringr::words, "[a-z]{7}")
str_view(stringr::words, "[a-z]{7}", match = T)
str_subset(stringr::words, pattern = "^[aeiou]")
str_subset(stringr::words,"^[aeiou]")
str_subset(stringr::words,"[^aeiou]")
str_subset(stringr::words,"[^aeiou]+")
str_subset(stringr::words,"[^a]+")
str_subset(stringr::words,"^[^a]+")
str_subset(stringr::words,"^[aeiou]", negative = TRUE)
str_subset(stringr::words,"^[aeiou]")
str_subset(stringr::words,"^[aeiou]", negate =  = TRUE)
str_subset(stringr::words,"^[aeiou]", negate = TRUE)
str_subset(stringr::words,"[aeiou]+", negate = TRUE)
str_subset(stringr::words,"[^e]ed$", negate = TRUE)
str_subset(stringr::words,"[^e]ed$")
str_subset(stringr::words,"ed$")
str_subset(stringr::words,"[^e]ed$")
str_subset(stringr::words,"ing|ise$")
str_subset(stringr::words,"ise|ing$")
str_subset(c("aiseb","aise","aingb","aing"),"ise|ing$")
str_subset(c("aiseb","aise","aingb","aing"),"ise$|ing$")
str_subset(stringr::words,"ise$|ing$")
data(mtcars)
head(mtcars)
hist(mtcars$mpg)
mtcars$mpg
hist(mtcars$mpg, col = "turquoise"
, las = 1,
main = "Histograma de mpg"
, xlab = "milhas/galão (mpg)"
, ylab = "Frequência")
hist(mtcars$mpg, breaks = seq(10, 35, 2.5))
hist(mtcars$mpg, breaks = 10)
dens <- density(mtcars$mpg)
plot(dens, col = "red"
, frame = FALSE, las = 1, lwd = 2,
main = "Densidade de mpg"
, ylab = "Densidade")
hist(mtcars$mpg, probability = TRUE, col = "turquoise"
, las = 1)
lines(dens, col = "red"
, lwd = 2)
plot(dens, frame = FALSE, las = 1, col = "steelblue"
,
main = "Densidade de mpg"
, ylab = "Densidade")
polygon(dens, col = "turquoise")
contagem <- table(mtcars$cyl)
barplot(contagem, col = 2:4, las = 1, ylab = "Frequência")
proporcao <- prop.table(contagem)
barplot(proporcao, col = 2:4, las = 1, ylab = "Proporção")
mtcars$am
plot(mpg ~ wt, data = mtcars, col = "#1B9E77"
, pch = 19)
plot(x = mtcars$wt, y = mtcars$mpg)
plot(mpg ~ wt, data = mtcars, col = "#1B9E77"
, pch = 19)
ggplot(data = mtcars) +
geom_histogram(mapping = aes(x = mpg), bins = 5, fill = "turquoise"
, color = "darkgrey")
library(ggplot2)
ggplot(data = mtcars) +
geom_histogram(mapping = aes(x = mpg), bins = 5, fill = "turquoise"
, color = "darkgrey")
library(purrr)
library(dplyr)
data(iris)
iris$Sepal.Length
arrange(iris$Sepal.Length)
mtcars %>% mutate(cyl = as.factor(cyl))
mtcars
head(cars)
plot(dist ~ speed, data = cars)
cars
plot(dist ~ speed, data = cars, xlab(velocidade))
plot(dist ~ speed, data = cars, xlab = velocidade)
plot(x = cars$speed, y = cars$dist)
plot(dist ~ speed, data = cars)
plot(dist ~ speed, data = cars, axes = F)
box()
plot(dist ~ speed, data = cars, axes = F)
axis(side=1, at=c(0:30))
axis(side=2, at=seq(0, 140, by=10)
box()
plot(dist ~ speed, data = cars, axes=F)
plot(dist ~ speed, data = cars, axes=F)
axis(1, seq(0,30,5), font=2)
plot(dist ~ speed, data = cars, axes=F)
axis(1, seq(0,30,5))
plot(dist ~ speed, data = cars, axes=F)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, col = "Blue")
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, col = "Blue", pch = 16)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, col = "Blue", pch = 19)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, col = "Blue", pch = 19)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, col = "Blue", pch = 19)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, pch = 19)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
axis(1, seq(0,35,5))
plot(dist ~ speed, data = cars, axes=F, pch = 19)
axis(1, seq(0,35,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, pch = 19)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, pch = 19, las = 1)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, pch = 19, las = 1)
axis(1, at = seq(0,30,5))
axis(2, seq(0,140,20))
plot(dist ~ speed, data = cars, axes=F, pch = 19, las = 1)
axis(1, seq(0,30,5))
axis(2, seq(0,140,20))
install.packages("RColorBrewer")
library(RColorBrewer)
?RColorBrewer
plot(dist ~ speed, data = cars, xlim(0,30) , pch = 19, las = 1)
plot(dist ~ speed, data = cars, xlim(0,30), ylim =(0,140)  , pch = 19, las = 1)
plot(dist ~ speed, data = cars, xlim(0,30), ylim =(0,140)  , pch = 19, las = 1)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 21, las = 1)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = blues9)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = blue)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = blue)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "blue")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue3")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 16, las = 1, col = "deepskyblue4")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4")
abline(a = 3.93, b = -17.58)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4", xlabel = velocidade)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4", xlabel = "velocidade")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4", main = "velocidade")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4", main = "Dados 1920")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4", main = "Dados 1920", xlab = "Velocidade")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4", main = "Dados 1920", xlab = "Velocidade", ylab = "ditância")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "deepskyblue4", main = "Dados 1920", xlab = "Velocidade", ylab = "distância")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância", cex = 1.5)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância", cex = 1.5)
g1<-plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância", cex = 1.5)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância", cex = 1.5)
inicio <- dmy_hm("4/9/2021 10:30")
inicio_trem <- ceiling_date(inicio + minutes(30),"hour") + minutes(95+30)
inicio_onibus <- ceiling_date(inicio + minutes(5),"hour") + minutes(250)
inicio_carro <- inicio + minutes(162+15)
fim <- dmy_hm("4/9/2021 14:30")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância", cex = 1.5)
knitr::opts_chunk$set(echo = TRUE)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância", cex = 1.5)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância", cex = 1.5)
library(tidyverse)
library(tidyverse)
cars %>% ggplot() +
geom_point(aes(x = speed, y = dist), size = 3, col = 4) +
labs(title = "Dados de 1920")
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1, col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância", cex = 1.5)
abline(a = -17.58, b = 3.93, col = "Red", lwd = 2)
VADeaths
VAMeans <- colMeans(VADeaths)
VAMeans <- colMeans(VADeaths)
barplot(VAMeans)
VAMeans <- colMeans(VADeaths)
barplot(VAMeans, las = 1, ylab = "Média de mortes",
main = "Mortes em rodovias- Virgínia")
VAMeans <- colMeans(VADeaths)
barplot(VAMeans, las = 1, ylab = "Média de mortes",
main = "Mortes em rodovias- Virgínia")
nomes = names(VAMeans) %>% str_replace("", "\n")
VAMeans <- colMeans(VADeaths)
barplot(VAMeans, las = 1, ylab = "Média de mortes",
main = "Mortes em rodovias- Virgínia")
nomes = names(VAMeans) %>% str_replace(" ", "\n")
VAMeans <- colMeans(VADeaths)
nomes = names(VAMeans) %>% str_replace(" ", "\n")
barplot(VAMeans, las = 1, ylab = "Média de mortes",
main = "Mortes em rodovias- Virgínia", names.arg = nomes)
cores <- c("lightblue","darkblue","lightgreen","darkgreen","pink")
barplot(VADeaths,col = cores, beside = TRUE)
legend("topleft", legend = rownames(VADeaths),
fill = cores, box.lty = 0, cex = 0.8)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,
main = "Comprimento da Sépala por Espécie",
xlab = "Espécie", ylab = "Comprimento")
iris$Specis <- str_to_title(iris$Species)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,
main = "Comprimento da Sépala por Espécie",
xlab = "Espécie", ylab = "Comprimento")
iris$Specis <- str_to_title(iris$Species)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,
main = "Comprimento da Sépala por Espécie",
xlab = "Espécie", ylab = "Comprimento")
iris$Specis <- str_to_title(iris$Species)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,
main = "Comprimento da Sépala por Espécie",
xlab = "Espécie", ylab = "Comprimento")
iris$Specis <- str_to_title(iris$Species)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,col = c("blue","red","green")
main = "Comprimento da Sépala por Espécie",
iris$Specis <- str_to_title(iris$Species)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,col = c("Blue","Red","Green")
main = "Comprimento da Sépala por Espécie",
iris$Specis <- str_to_title(iris$Species)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,)
iris$Specis <- str_to_title(iris$Species)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,
main = "Comprimento da Sépala por Espécie",
xlab = "Espécie", ylab = "Comprimento")
iris$Specis <- str_to_title(iris$Species)
boxplot(Sepal.Width ~ Species, data = iris, las = 1,
main = "Comprimento da Sépala por Espécie"
, ylab = "Comprimento")
install.packages("agridat")
ibrary(agridat)
df <- goulden.barley.uniformity
seq(21,249,19) + 0.5
library(agridat)
df <- goulden.barley.uniformity
glimpse(df)
seq(21,249,19) + 0.5
library(agridat)
df <- goulden.barley.uniformity
glimpse(df)
hist(df$yield)
seq(21,249,19) + 0.5
library(agridat)
df <- goulden.barley.uniformity
glimpse(df)
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada")
seq(21,249,19) + 0.5
library(agridat)
df <- goulden.barley.uniformity
glimpse(df)
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência" )
seq(21,249,19) + 0.5
library(agridat)
df <- goulden.barley.uniformity
glimpse(df)
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência", col = "blue" )
seq(21,249,19) + 0.5
library(agridat)
df <- goulden.barley.uniformity
glimpse(df)
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência", col = "lightblue" )
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência", col = "lightblue",
probability = TRUE)
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência", col = "lightblue",
probability = TRUE, cex.axis = 0.8)
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência", col = "lightblue",
probability = TRUE, cex.axis = 0.8)
m <- mean(df$yield)
s <- sd(df$yield)
curve(dnorm(x,mean = m, sd = s), 40, 250, col = "red", lwd = 2)
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência", col = "lightblue",
probability = TRUE, cex.axis = 0.8)
m <- mean(df$yield)
s <- sd(df$yield)
curve(dnorm(x,mean = m, sd = s), 40, 250, col = "red", lwd = 2, add = T)
getwd()
pdf("histogramaCevada.pdf")
list.files
png("histogramaCevada.png")
pdf("histogramaCevada.pdf")
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência", col = "lightblue",
probability = TRUE, cex.axis = 0.8)
m <- mean(df$yield)
s <- sd(df$yield)
curve(dnorm(x,mean = m, sd = s), 40, 250, col = "red", lwd = 2, add = T)
dev.off()
png("histogramaCevada.png")
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot", ylab = "Freqência", col = "lightblue",
probability = TRUE, cex.axis = 0.8)
m <- mean(df$yield)
s <- sd(df$yield)
curve(dnorm(x,mean = m, sd = s), 40, 250, col = "red", lwd = 2, add = T)
dev.off()
seq(21,249,19) + 0.5
library(agridat)
df <- goulden.barley.uniformity
glimpse(df)
hist(df$yield, breaks = seq(21,249,19) + 0.5, las = 1, main = "Produção de Cevada",
xlab = "Produção(gramas por plot)", ylab = "Freqência", col = "lightblue" )
---
title: "R Notebook"
output: html_notebook
editor_options:
chunk_output_type: inconsole
---
1+1
editor_options:
chunk_output_type: inconsole
---
title: "R Notebook"
output: html_notebook
editor_options:
chunk_output_type: inconsole
---
---
title: "R Notebook"
output: html_notebook
editor_options:
chunk_output_type: console
---
1+1
1+2
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1,
col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância",
cex = 1.5)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1,
col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância",
cex = 0.1)
plot(dist ~ speed, data = cars, xlim = c(0,30), ylim = c(0,140)  , pch = 19, las = 1,
col = "steelblue", main = "Dados 1920", xlab = "Velocidade", ylab = "distância",
cex = 1.5)
library(tidyverse)
cars %>% ggplot() +
geom_point(aes(x = speed, y = dist), size = 3, col = 4) +
labs(title = "Dados de 1920")
summary(cars)
cars
dir()
getwd()
setwd("Prova02-Parte 2/")
getwd
getwd()
library(readr)
acidentes <_ read("datatran2020.csv")
acidentes <- read("datatran2020.csv")
acidentes <- read_csv("datatran2020.csv")
View(acidentes)
library(readxl)
acidentes <- read_exel("datatran2020.csv")
acidentes <- read_excel("datatran2020.csv")
acidentes <- read_excel("datatran2021.xls")
View(acidentes)
library(tidyverse)
acidentes %<>% as.tibble()
library(dplyr)
acidentes %<>% as.tibble()
acidentes %>% as.tibble()
acidentes %>% as_tibble()
acidentes<- acidentes %>% as_tibble()
levels(acidentes$dia_semana)
acidentes$dia_semana
acidentes['dia_semana']
levels(acidentes['dia_semana'])
levels(acidentes)
acidentes$dia_semana %>% as.factor() %>% levels()
?read_delim
acidentes1 <- read_delim("datatran2021.xls")
acidentes1 <- read_delim("datatran2021.xls", row.names = 1)
acidentes1 <- readr::read_delim("datatran2021.xls", row.names = 1)
acidentes1 <- readr::read_delim("datatran2021.xls")
acidentes1 <- read_csv2("datatran2020.csv")
View(acidentes1)
acidentes1 <- read_delim("datatran2020.csv",delim = ";")
View(acidentes1)
list.files
list.files()
convert("datatran2020.csv", "datatran2020.xls")
library("rio")
convert("datatran2020.csv", "datatran2020.xls")
read_csv2("http://arquivos.prf.gov.br/arquivos/index.php/s/n1T3lymvIdDOzzb/download")
