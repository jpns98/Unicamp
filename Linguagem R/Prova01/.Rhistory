low[46]
0.03196211<0.3
library(dslabs)
data(murders)
population_in_millions <- murders$population/10ˆ6
total_gun_murders <- murders$total
plot(population_in_millions, total_gun_murders)
population_in_millions <- murders$population/10^6
total_gun_murders <- murders$total
plot(population_in_millions, total_gun_murders)
plot(log(population_in_millions), log(total_gun_murders))
plot(log(population_in_millions,10), log(total_gun_murders,10))
plot(log(population_in_millions,10), log(total_gun_murders))
plot(log(population_in_millions), log(total_gun_murders))
log(10)
10^(log(10))
log(200.7174)
log(exp(1))
exp(1)
exp(1)^2.302585
hist(murders$state,murders$population)
?hist
hist(murders$population)
hist(murders$population, xlab = murders$state)
hist(murders$population, xlab = "murders$state")
hist(murders$population)
?hist
hist(murders$population,murders$state)
hist(murders$population, breaks = murders$state)
hist(murders$population, breaks = "murders$state")
names(population_in_millions) <- murders$state
hist(population_in_millions, breaks = "murders$state")
hist(population_in_millions)
hist(population_in_millions)
hist(population_in_millions)
population_in_millions
hist(population_in_millions,xlim = murders$state)
hist(population_in_millions)
hist(population_in_millions, breaks=4)
hist(population_in_millions, breaks=1)
hist(population_in_millions, breaks=10)
hist(population_in_millions, breaks=100)
AirPassengers
hist(population_in_millions,xaxt = murders$state, breaks=100)
hist(population_in_millions, breaks=100)
hist(population_in_millions, breaks=100,freq = T)
hist(population_in_millions, breaks=100,freq = F)
hist(population_in_millions, breaks=100)
matrix(data=seq(1, 100), nrow=10, ncol=10, byrow=T)
?CBIND
?cbind
Sn = n*(n + 1)*(2*n + 1)/6
#5 ----
n <- 1:25
Sn = n*(n + 1)*(2*n + 1)/6
soma_n <- function(n){
soma <- 0
for(i in 1:n) soma <- soma + i
return(soma)
}
soma_n <- function(n){
return(n*(n+1)/2)
}
calcule_sn <- function(n){
soma <- 0
for(i in 1:n) soma <- soma + i^2
return(soma)
}
calcule_sn(10)
sum((1:10)^2)
s_n <- vector("numeric", 25)
for(i in 1:25){
s_n[i] <- calcule_sn(i)
}
cbind(n=1:25, s_n)
#5 ----
n <- 1:25
Sn = n*(n + 1)*(2*n + 1)/6
cbind(n=n,s_n, Sn)
cbind(n=n,s_n, Sn)
dados_rolando <- function(n){
#soma do lanÃ§amento de n dados
dados <- sample(x = 1:6, size = n,
replace = TRUE)
return(list(dados=dados, soma_dados=sum(dados)))
}
dados_rolando(2)
fib2 = function(n) {
if (n %in% c(0, 1))
return(n)
return(fib2(n - 1) + fib2(n - 2))
}
fib2(10)
fibonacci = function(n) {
if (n == 0)
return(n)
else
return(sapply(1:n, fib1)) # trocar por fib2 é a mesma coisa
}
fibonacci(10)
fibonacci = function(n) {
+     if (n == 0)
+         return(n)
+     else
+         return(sapply(1:n, fib2)) # trocar por fib2 é a mesma coisa
+ }
1 ----
data("airquality")
# a - 5
str(airquality)
airquality$Month = factor(airquality$Month,
levels = 1:12,
labels = c("Janeiro", "Fevereiro", "Marco",    "Abril",   "Maio",     "Junho",
"Julho",   "Agosto",    "Setembro", "Outubro", "Novembro", "Dezembro"
ad
1 ----
data("airquality")
# a - 5
str(airquality)
airquality$Month = factor(airquality$Month,
levels = 1:12,
labels = c("Janeiro", "Fevereiro", "Marco",    "Abril",   "Maio",     "Junho",
"Julho",   "Agosto",    "Setembro", "Outubro", "Novembro", "Dezembro")
ZS
airquality$Month = factor(airquality$Month,
levels = 1:12,
labels = c("Janeiro", "Fevereiro", "Marco",    "Abril",   "Maio",     "Junho",
"Julho",   "Agosto",    "Setembro", "Outubro", "Novembro", "Dezembro"))
str(airquality)
airquality$Month = factor(airquality$Month,
levels = 1:12,
labels = c("Janeiro", "Fevereiro", "Marco",    "Abril",   "Maio",     "Junho",
"Julho",   "Agosto",    "Setembro", "Outubro", "Novembro", "Dezembro"))
airquality$Month
?median
is.NULL(T)
is.null(t)
is.null(FALSE)
is.null("FALSE")
is.null(NULL)
is.null(null)
?is.null
airquality
names(airquality)
trials = replicate(100, t.test(rpois(10, 10), rpois(7, 10)), simplify = FALSE)
trials = replicate(3, t.test(rpois(10, 10), rpois(7, 10)), simplify = FALSE)
trials
trials[1]
names(trials[1])
trials[[1]]
names(trials[[1]])
trials[["p.value"]]
trials[[3]]
trials[[1]][3]
sapply(trials,"[[",3)
trials[[1]][[3]]
trials[[2]][[3]]
trials[[3]][["p.value"]]
?apply
data("mtcars")
str(mtcars)
l <- lapply(mtcars, min)
s <- sapply(mtcars, min)
m <- mapply(min,mtcars)
#2b)
listobjects <- list(l=l,s=s,m=m)
#2c)
sapply(listobjects,class)
l
m
s
A <- matrix(c(1,4,7,2,5,8,3,6,9),nrow=3,ncol=3,byrow=T)
A
B <- matrix(c(4,8,12,5,9,13,6,10,14,7,11,15),nrow = 4,ncol = 3,byrow = T)
B
C <- matrix(c(8,8,9,9,10,10),nrow = 2, ncol=2, byrow = T)
C
C <- matrix(c(8,8,9,9,10,10),nrow = 3, ncol=2, byrow = T)
CC
C
M <- list(A,B,C)
M
M[[1]]
M[1]
M[,1,]
M[[1]][,2]
M[[1]][1,]
?rep
rep(1,3)
?rnorm
#2c)
sapply(listobjects,class)
#3a)----
listaME <- mapply(rep, c("ME","115"), times = 8:1)
listaME
#3b)
listaME <- mapply(rep, c("ME","115"), times = 8:1,USE.NAMES = FALSE)
#c)
apply(FUN= sum, X = Titanic,MARGIN = c("Age","Sex"))
#3b)
listaME <- mapply(rep, c("ME","115"), times = 8:1,USE.NAMES = FALSE)
listaME
data(Titanic)
str(Titanic)
apply(FUN = sum, X = Titanic, MARGIN = 2)
titanic[[1]]
Titanic[[1]]
Titanic
apply(FUN = sum, X = Titanic, MARGIN = 2)
apply(FUN = sum, X = Titanic, MARGIN = c("Sex","Survived"))
#c)
apply(FUN= sum, X = Titanic,MARGIN = c("Age","Sex"))
Titanic[1,1,]
Titanic[1,1,1,1]
Titanic[1,1,,]
#c)
apply(FUN= sum, X = Titanic,MARGIN = c("Age","Sex"))
#c)
apply(FUN= sum, X = Titanic,MARGIN = c(3,2))
listobj <- list(first, second, third, fourth)
first <- matrix(38:67, 3)
second <- matrix(56:91, 3)
third <- matrix(82:144, 3)
fourth <- matrix(46:93, 6)
listobj <- list(first, second, third, fourth)
listobj
lapply(listobj,"[",,2)
#6a)----
data(iris)
which(sapply(iris, class) != "numeric")
iris
which(sapply(iris, class) != "numeric")
which(sapply(iris, class) == "numeric")
which(apply(iris, class) == "numeric")
sapply(iris, class)
apply(iris, class)
apply(iris, FUN = class)
apply(iris,2, class)
apply(iris,1, class)
which(sapply(iris, class) != "numeric")
#b)
class(iris$Species)
iris$Species
levels(iris$Species)
#c)
unique(iris$Species)
levels(iris$Species)
#7)----
data(PlantGrowth)
PlantGrowth
tapply(X = PlantGrowth$weight,INDEX = PlantGrowth$group,FUN = sd)
setwd("E:/Unicamp/2021_1/Linguagem R/Prova01")
readr::read_lines("01.txt",1)
readr::read_csv("01.txt")
getwd()
library(readxl)
library(writexl)
library(readxl)
?subset
files("")
files("dados/")
file("dados/")
file("")
file.show("")
list.files("")
list.files("dados/")
getwd()
list.files()
gm <- read_csv("dados/gapminder.csv")
class(gm)
head(gm)
set.seed(176146)  # insira seu RA aqui
idx <- sample(1:nrow(gm), 300)
gm <- gm[-idx, ]
sample(1>6,5)
sample(1:3,4)
sample(1:6,2)
?set.seed
idx
gm <- read_csv("dados/gapminder.csv")
gm <- readrread_csv("dados/gapminder.csv")
gm <- readr::read_csv("dados/gapminder.csv")
A <- matrix(c(1,4,7,2,5,8,3,6,9),nrow=3,ncol=3,byrow=T)
A
A=A[-1,]
A
set.seed(176146)  # insira seu RA aqui
idx <- sample(1:nrow(gm), 300)
gm <- gm[-idx, ]
idx
gm
unique(gm$continent)
continentes <- unique(gm$continent)
continentes
gm$gdp=gm$gdpPercap*gm$pop
gm$gdp
seq(1,2,3)
seq(c(1,2,3,4))
seq(c(1,1,1,3,3,4))
seq(c(1,1,2,2,4,5,6,7,8))
?seq
seq(from = c(1,1,2,2,4,5,6,7,8))
seq(along.with = c(1,1,2,2,4,5,6,7,8))
anos <- seq(gm$year)
anos
seq(c(5,6,7))
seq(5,6,7)
seq(c(54,44))
seq(2,3,4)
continentes
length(continentes)
1:length(continentes
1:length(continentes
1:length(continentes
1:length(continentes)
1:length(continentes)
unique(subser(gm,gm$continent==continent[1]))
continente[1]
continentes[1]
unique(subset(gm,gm$continent==continent[1]))
unique(subset(gm,gm$continent==continent[1])$country)
unique(subset(gm,gm$continent==continent[2])$country)
unique(subset(gm, continent == continent[1])$country)
unique(subset(gm, continent == continent[1])$country)
unique(subset(gm, continent == continent[2])$country)
gm
subset(gm, continent == continent[2])
subset(gm, continent == "continent[2]")
"continent[2]"
unique(subset(gm, continent == continentes[2])$country)
unique(subset(gm, continent == continentes[3])$country)
n_paises <- list()
n_paises <- list()
n_paises <- list()
for(i in 1:length(continentes){
n_paises[i] <- unique(subset(gm, continent == continentes[i])$country))
}
n_paises <- list()
for(i in 1:length(continentes){
n_paises[i] <- unique(subset(gm, continent == continentes[i])$country)
}
n_paises <- list()
for(i in 1:length(continentes) {
n_paises[i] <- unique(subset(gm, continent == continentes[i])$country)
}
n_paises <- list()
for(i in 1:length(continentes) {
n_paises[i] <- unique(subset(gm, continent == continentes[i])$country)
}
n_paises <- list()
for(i in 1:length(continentes) {
n_paises[i] <- unique(subset(gm, continent == continentes[i])$country)
}
n_paises <- list()
for(i in 1:length(continentes) {
}
n_paises <- list()
for(i in 1:length(continentes) {
}
n_paises <- list()
for(i in 1:length(continentes) {
}
n_paises <- list()
for(i in 1:length(continentes)) {
n_paises[i] <- unique(subset(gm, continent == continentes[i])$country)
}
n_paises <- list(0,0,0,0,0,)
n_paises <- list(0,0,0,0,0)
n_paises
for(i in 1:length(continentes)) {
n_paises[i] <- unique(subset(gm, continent == continentes[i])$country)
}
1:length(continentes
1:length(continentes
1:length(continentes)
unique(subset(gm, continent == continentes[1])$country)
length(unique(subset(gm, continent == continentes[1])$country))
length(unique(subset(gm, continent == continentes[2])$country))
for(i in 1:length(continentes)) {
n_paises[i] <- length(unique(subset(gm, continent == continentes[i])$country))
}
n_paises
n= c=2
n
n<-list(0)
n[1]="sim"=2
n
names(n)<-"a"
n
names(n_paises)<-continentes
n_paises
conta_paises <- function(continente,dados = gm){
n <- length(unique(subset(dados, continent ==  continente)$country))
}
conta_paises("Asia")
conta_paises(Asia)
conta_paises("Asia")
x<-conta_paises("Asia")
x
y<-conta_paises("Oceania")
y
lapply(gm,FUN = conta_paises)
lapply(continentes,FUN = conta_paises)
lapply(continentes,FUN = conta_paises,names=continentes)
?lapply
lapply(continentes,FUN = conta_paises,USE.NAMES = T)
lapply(continentes,FUN = conta_paises)
lapply(continentes,FUN = conta_paises, USE.NAMES=F)
lapply(continentes,USE.NAMES=T,FUN = conta_paises)
lapply(continentes, USE.NAMES = T,FUN = conta_paises)
mapply(FUN = conta_paises,continentes, USE.NAMES = T)
mapply(FUN = conta_paises,continentes, USE.NAMES = T)
anos <- gm$year
anos
table(anos)
table(gm$year)
unique(gm$year)
anos <- unique(gm$year)
anos
apply(FUN= sum, X = Titanic,MARGIN = c("Age","Sex"))
gm
apply(FUN= mean, X = gm, MARGIN = c("year","continent")
apply(FUN= mean, X = gm$lifeExp, MARGIN = c("year","continent")
apply(FUN= mean, X = gm$lifeExp, MARGIN = c("year","continent")
apply(FUN=function(x){ mean(x$lifeExp)}, X = gm, MARGIN = c("year","continent"))
apply( X = gm,FUN=function(x){ mean(x$lifeExp)}, MARGIN = c("year","continent"))
apply(gm$lifeExp,FUN= mean, MARGIN = c("year","continent"))
sapply(gm$lifeExp,FUN= mean, MARGIN = c("year","continent"))
apply(gm$lifeExp,FUN=function(x){mean(x$lifeExp)}
apply(gm$lifeExp,FUN= mean
apply(gm$lifeExp,FUN=function(x){mean(x$lifeExp)})
sapply(gm$lifeExp,FUN=function(x){mean(x$lifeExp)})
apply(gm,FUN=function(x){mean(x$lifeExp)})
sapply(gm,FUN=function(x){mean(x$lifeExp)})
apply(gm , FUN=function(x){mean(x$lifeExp)},, MARGIN = c("year","continent"))
apply(gm , FUN=function(x){mean(x$lifeExp)}, MARGIN = c("year","continent"))
gm
order(c(1,2,4,5,6))
n<-c(2,544,65,75,2,1)
n
n=n[sortn]
A <- matrix(c(1,4,7,2,5,8,3,6,9),nrow=3,ncol=3,byrow=T)
A
A[order(A$1)]
A$1
A[order(A[,1]
)
A <- matrix(c(1,4,7,2,5,8,3,6,9),nrow=3,ncol=3,byrow=T)
A[order(A[,1])]
foo <- read.table(text="1 349
1 393
1 392
4 459
3 49
3 32
2 94")
foo
foo[order(foo$V1),]
foo
foo[order(foo$V1),]
gm[1,1,1,1]
gm["year"=2007]
gm["year"==2007]
gm <- readr::read_csv("dados/gapminder.csv")
class(gm)
set.seed(176146)  # insira seu RA aqui
idx <- sample(1:nrow(gm), 300)
gm <- gm[-idx, ]
gm <- gm[-idx, ]
gm <- readr::read_csv("dados/gapminder.csv")
class(gm)
set.seed(176146)  # insira seu RA aqui
idx <- sample(1:nrow(gm), 300)
gm <- gm[-idx, ]
gm["year"==2007]
gm[,,"year"=2007,,,,]
gm[,,"year"==2007,,,,]
anos
A
gm
1952==1952
1977==1977
gm[1,,,,,]
gm[,1,,,,]
gm[,,1,,,]
gm[,,,1,,]
gm[,,,,1,]
gm[country==Afghanistan]
gm[country=="Afghanistan"]
gm["country"=="Afghanistan"]
gm[year == 2007]
gm["year" == 2007]
gm[[1]]
gm[[2]]
gm[[3]]
subset(gm, year=2007)
subset(gm, "year"=2007)
subset(gm, "year"==2007)
a<-subset(gm, "year"=2007)
a
a<-subset(gm, year==2007)
a
set_ano[[3]]
gm[[3]]
dados["year"]
dados["year"]
gam["year"]
gm["year"]
write.csv
?write.csv
?paste0
paste0(1,3)
